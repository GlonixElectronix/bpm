# Django REST API: Complete Usage Guide

## 1. Running the Server
- Apply migrations and start the server:

    python manage.py migrate
    python manage.py runserver

- The server will be available at http://localhost:8000/

## 2. User Management (Admin Only)
- Create a superuser:

    python manage.py createsuperuser

- Visit http://localhost:8000/admin/ and log in.
- Add users via the Django admin interface (no public registration endpoint).

## 3. Authentication (JWT)
- Obtain a JWT token:

    POST /api/auth/token/
    {
        "username": "<username>",
        "password": "<password>"
    }

- Response:
    {
        "refresh": "<refresh_token>",
        "access": "<access_token>"
    }

- Use the access token in the Authorization header for all API requests:

    Authorization: Bearer <access_token>

- Refresh the access token:

    POST /api/auth/token/refresh/
    {
        "refresh": "<refresh_token>"
    }

- Response:
    {
        "access": "<new_access_token>"
    }

## 4. API Endpoints (CRUD)

### Customers
- List:      GET    /api/customers/
- Create:    POST   /api/customers/
- Retrieve:  GET    /api/customers/{id}/
- Update:    PUT    /api/customers/{id}/
- Delete:    DELETE /api/customers/{id}/

#### Customer Fields
- customer_type: "business" or "individual" (default: business)
- salutation: "dr", "mr", "ms", "mrs" (optional)
- first_name, last_name: string (optional)
- company_name: string (optional)
- display_name: string (required)
- email: string (required, unique)
- work_phone, mobile: string (optional)
- pan: string (optional)
- currency: "AED", "AUD", "BND", "CAD", "CNY", "EUR", "GBP", "INR", "JPY", "SAR", "USD", "ZAR" (default: INR)
- opening_balance: decimal (default: 0)
- payment_terms: "due_on_receipt", "net_7", "net_15", "net_30", "net_45" (default: due_on_receipt)
- documents: array of CustomerDocument objects (max 10, each â‰¤10MB)
- billing_*: address fields (attention, country, street1, street2, city, state, pin_code, phone, fax)
- shipping_*: address fields (same as billing)
- contact_persons: array of ContactPerson objects (see below)
- custom_fields: key-value pairs (JSON)
- tags: array of strings
- remarks: string (optional)

#### CustomerDocument Fields
- id: integer
- file: file URL
- uploaded_at: datetime

#### ContactPerson Fields
- id: integer
- salutation: "dr", "mr", "ms", "mrs" (optional)
- first_name, last_name: string
- email: string
- work_phone, mobile: string (optional)

#### Example: Create Customer
POST /api/customers/
Content-Type: application/json
Authorization: Bearer <access_token>

{
  "customer_type": "business",
  "salutation": "mr",
  "first_name": "John",
  "last_name": "Doe",
  "company_name": "Acme Corp",
  "display_name": "Acme Corp (John Doe)",
  "email": "john.doe@acme.com",
  "work_phone": "1234567890",
  "mobile": "9876543210",
  "pan": "ABCDE1234F",
  "currency": "INR",
  "opening_balance": "1000.00",
  "payment_terms": "net_30",
  "billing_attention": "Accounts",
  "billing_country": "India",
  "billing_street1": "123 Main St",
  "billing_street2": "Suite 100",
  "billing_city": "Mumbai",
  "billing_state": "MH",
  "billing_pin_code": "400001",
  "billing_phone": "0221234567",
  "billing_fax": "0227654321",
  "shipping_attention": "Warehouse",
  "shipping_country": "India",
  "shipping_street1": "456 Warehouse Rd",
  "shipping_street2": "",
  "shipping_city": "Mumbai",
  "shipping_state": "MH",
  "shipping_pin_code": "400002",
  "shipping_phone": "0229876543",
  "shipping_fax": "0223456789",
  "custom_fields": {"GSTIN": "27ABCDE1234F1Z5"},
  "tags": ["priority", "2025"],
  "remarks": "Important customer"
}

#### Example: Retrieve Customer (with nested documents and contact persons)
GET /api/customers/1/
Authorization: Bearer <access_token>

Response:
{
  "id": 1,
  "customer_type": "business",
  "salutation": "mr",
  "first_name": "John",
  "last_name": "Doe",
  "company_name": "Acme Corp",
  "display_name": "Acme Corp (John Doe)",
  "email": "john.doe@acme.com",
  "work_phone": "1234567890",
  "mobile": "9876543210",
  "pan": "ABCDE1234F",
  "currency": "INR",
  "opening_balance": "1000.00",
  "payment_terms": "net_30",
  "documents": [
    {"id": 1, "file": "/media/customer_documents/doc1.pdf", "uploaded_at": "2025-08-27T10:00:00Z"}
  ],
  "billing_attention": "Accounts",
  "billing_country": "India",
  "billing_street1": "123 Main St",
  "billing_street2": "Suite 100",
  "billing_city": "Mumbai",
  "billing_state": "MH",
  "billing_pin_code": "400001",
  "billing_phone": "0221234567",
  "billing_fax": "0227654321",
  "shipping_attention": "Warehouse",
  "shipping_country": "India",
  "shipping_street1": "456 Warehouse Rd",
  "shipping_street2": "",
  "shipping_city": "Mumbai",
  "shipping_state": "MH",
  "shipping_pin_code": "400002",
  "shipping_phone": "0229876543",
  "shipping_fax": "0223456789",
  "contact_persons": [
    {"id": 1, "salutation": "ms", "first_name": "Jane", "last_name": "Smith", "email": "jane@acme.com", "work_phone": "", "mobile": ""}
  ],
  "custom_fields": {"GSTIN": "27ABCDE1234F1Z5"},
  "tags": ["priority", "2025"],
  "remarks": "Important customer",
  "created_at": "2025-08-27T10:00:00Z"
}

### Vendors
- List:      GET    /api/vendors/
- Create:    POST   /api/vendors/
- Retrieve:  GET    /api/vendors/{id}/
- Update:    PUT    /api/vendors/{id}/
- Delete:    DELETE /api/vendors/{id}/

### Invoices
- List:      GET    /api/invoices/
- Create:    POST   /api/invoices/
- Retrieve:  GET    /api/invoices/{id}/
- Update:    PUT    /api/invoices/{id}/
- Delete:    DELETE /api/invoices/{id}/

### Items
- List:      GET    /api/items/
- Create:    POST   /api/items/
- Retrieve:  GET    /api/items/{id}/
- Update:    PUT    /api/items/{id}/
- Delete:    DELETE /api/items/{id}/

### Payments
- List:      GET    /api/payments/
- Create:    POST   /api/payments/
- Retrieve:  GET    /api/payments/{id}/
- Update:    PUT    /api/payments/{id}/
- Delete:    DELETE /api/payments/{id}/

### Quotes
- List:      GET    /api/quotes/
- Create:    POST   /api/quotes/
- Retrieve:  GET    /api/quotes/{id}/
- Update:    PUT    /api/quotes/{id}/
- Delete:    DELETE /api/quotes/{id}/

### Proforma Invoices
- List:      GET    /api/proforma-invoices/
- Create:    POST   /api/proforma-invoices/
- Retrieve:  GET    /api/proforma-invoices/{id}/
- Update:    PUT    /api/proforma-invoices/{id}/
- Delete:    DELETE /api/proforma-invoices/{id}/

### Delivery Challans
- List:      GET    /api/delivery-challans/
- Create:    POST   /api/delivery-challans/
- Retrieve:  GET    /api/delivery-challans/{id}/
- Update:    PUT    /api/delivery-challans/{id}/
- Delete:    DELETE /api/delivery-challans/{id}/

### Inventory Adjustments
- List:      GET    /api/inventory-adjustments/
- Create:    POST   /api/inventory-adjustments/
- Retrieve:  GET    /api/inventory-adjustments/{id}/
- Update:    PUT    /api/inventory-adjustments/{id}/
- Delete:    DELETE /api/inventory-adjustments/{id}/

## 5. Example Requests (All Resources)

### Customers
- Create:
    POST /api/customers/
    {
        "name": "Acme Corp",
        "email": "info@acme.com",
        "company_name": "Acme Corporation",
        "address": "123 Main St",
        "phone": "1234567890"
    }
- Update:
    PUT /api/customers/1/
    {
        "name": "Acme Corp Updated",
        "email": "info@acme.com",
        "company_name": "Acme Corporation",
        "address": "456 Main St",
        "phone": "1234567890"
    }
- Retrieve:
    GET /api/customers/1/
- Delete:
    DELETE /api/customers/1/

### Vendors
- Create:
    POST /api/vendors/
    {
        "name": "Vendor Inc",
        "email": "vendor@example.com",
        "company_name": "Vendor Incorporated",
        "address": "456 Vendor St",
        "phone": "9876543210"
    }
- Update:
    PUT /api/vendors/1/
    {
        "name": "Vendor Inc Updated",
        "email": "vendor@example.com",
        "company_name": "Vendor Incorporated",
        "address": "789 Vendor Ave",
        "phone": "9876543210"
    }
- Retrieve:
    GET /api/vendors/1/
- Delete:
    DELETE /api/vendors/1/

### Invoices
- Create:
    POST /api/invoices/
    {
        "customer_id": 1,
        "invoice_number": "INV-1001",
        "date": "2025-08-24",
        "due_date": "2025-09-24",
        "amount": "500.00",
        "status": "draft",
        "notes": "First invoice"
    }
- Update:
    PUT /api/invoices/1/
    {
        "customer_id": 1,
        "invoice_number": "INV-1001",
        "date": "2025-08-24",
        "due_date": "2025-09-24",
        "amount": "600.00",
        "status": "sent",
        "notes": "Updated invoice"
    }
- Retrieve:
    GET /api/invoices/1/
- Delete:
    DELETE /api/invoices/1/

### Items
- Create:
    POST /api/items/
    {
        "name": "Item 1",
        "description": "A sample item",
        "price": "10.00",
        "sku": "SKU001"
    }
- Update:
    PUT /api/items/1/
    {
        "name": "Item 1 Updated",
        "description": "Updated description",
        "price": "12.00",
        "sku": "SKU001"
    }
- Retrieve:
    GET /api/items/1/
- Delete:
    DELETE /api/items/1/

### Payments
- Create:
    POST /api/payments/
    {
        "invoice_id": 1,
        "amount": "500.00",
        "date": "2025-08-25",
        "method": "Bank Transfer",
        "notes": "Full payment received"
    }
- Update:
    PUT /api/payments/1/
    {
        "invoice_id": 1,
        "amount": "600.00",
        "date": "2025-08-26",
        "method": "Credit Card",
        "notes": "Updated payment"
    }
- Retrieve:
    GET /api/payments/1/
- Delete:
    DELETE /api/payments/1/

### Quotes
- Create:
    POST /api/quotes/
    {
        "customer_id": 1,
        "quote_number": "Q-1001",
        "date": "2025-08-24",
        "valid_until": "2025-09-01",
        "amount": "1000.00",
        "status": "draft",
        "notes": "First quote"
    }
- Update:
    PUT /api/quotes/1/
    {
        "customer_id": 1,
        "quote_number": "Q-1001",
        "date": "2025-08-24",
        "valid_until": "2025-09-01",
        "amount": "1200.00",
        "status": "sent",
        "notes": "Updated quote"
    }
- Retrieve:
    GET /api/quotes/1/
- Delete:
    DELETE /api/quotes/1/

### Proforma Invoices
- Create:
    POST /api/proforma-invoices/
    {
        "customer_id": 1,
        "proforma_number": "P-1001",
        "date": "2025-08-24",
        "due_date": "2025-09-24",
        "amount": "1500.00",
        "status": "draft",
        "notes": "First proforma"
    }
- Update:
    PUT /api/proforma-invoices/1/
    {
        "customer_id": 1,
        "proforma_number": "P-1001",
        "date": "2025-08-24",
        "due_date": "2025-09-24",
        "amount": "1600.00",
        "status": "sent",
        "notes": "Updated proforma"
    }
- Retrieve:
    GET /api/proforma-invoices/1/
- Delete:
    DELETE /api/proforma-invoices/1/

### Delivery Challans
- Create:
    POST /api/delivery-challans/
    {
        "customer_id": 1,
        "challan_number": "DC-1001",
        "date": "2025-08-24",
        "delivery_date": "2025-08-25",
        "status": "draft",
        "notes": "First delivery challan"
    }
- Update:
    PUT /api/delivery-challans/1/
    {
        "customer_id": 1,
        "challan_number": "DC-1001",
        "date": "2025-08-24",
        "delivery_date": "2025-08-25",
        "status": "delivered",
        "notes": "Delivered"
    }
- Retrieve:
    GET /api/delivery-challans/1/
- Delete:
    DELETE /api/delivery-challans/1/

### Inventory Adjustments
- Create:
    POST /api/inventory-adjustments/
    {
        "item_id": 1,
        "adjustment_number": "ADJ-1001",
        "date": "2025-08-24",
        "quantity": 10,
        "reason": "Stock count correction",
        "notes": "Initial adjustment"
    }
- Update:
    PUT /api/inventory-adjustments/1/
    {
        "item_id": 1,
        "adjustment_number": "ADJ-1001",
        "date": "2025-08-24",
        "quantity": 12,
        "reason": "Correction",
        "notes": "Updated adjustment"
    }
- Retrieve:
    GET /api/inventory-adjustments/1/
- Delete:
    DELETE /api/inventory-adjustments/1/

## 6. Notes
- All endpoints require JWT authentication.
- Only admin can create users via Django admin.