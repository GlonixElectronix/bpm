### AUTHENTICATION

# Obtain JWT token
POST http://localhost:8000/api/auth/token/
Content-Type: application/json

{
    "username": "your_username",
    "password": "your_password"
}

####
# Refresh JWT token
POST http://localhost:8000/api/auth/token/refresh/
Content-Type: application/json

{
    "refresh": "<refresh_token>"
}

### CUSTOMERS CRUD

# List customers
GET http://localhost:8000/api/customers/
Authorization: Bearer <access_token>

####
# Create customer (all fields)
POST http://localhost:8000/api/customers/
Authorization: Bearer <access_token>
Content-Type: application/json

{
  "customer_type": "business",
  "salutation": "mr",
  "first_name": "John",
  "last_name": "Doe",
  "company_name": "Acme Corp",
  "display_name": "Acme Corp (John Doe)",
  "email": "john.doe@acme.com",
  "work_phone": "1234567890",
  "mobile": "9876543210",
  "pan": "ABCDE1234F",
  "currency": "INR",
  "opening_balance": "1000.00",
  "payment_terms": "net_30",
  "billing_attention": "Accounts",
  "billing_country": "India",
  "billing_street1": "123 Main St",
  "billing_street2": "Suite 100",
  "billing_city": "Mumbai",
  "billing_state": "MH",
  "billing_pin_code": "400001",
  "billing_phone": "0221234567",
  "billing_fax": "0227654321",
  "shipping_attention": "Warehouse",
  "shipping_country": "India",
  "shipping_street1": "456 Warehouse Rd",
  "shipping_street2": "",
  "shipping_city": "Mumbai",
  "shipping_state": "MH",
  "shipping_pin_code": "400002",
  "shipping_phone": "0229876543",
  "shipping_fax": "0223456789",
  "custom_fields": {"GSTIN": "27ABCDE1234F1Z5"},
  "tags": ["priority", "2025"],
  "remarks": "Important customer"
}

####
# Retrieve customer (with nested documents and contact persons)
GET http://localhost:8000/api/customers/1/
Authorization: Bearer <access_token>

####
# Update customer (partial or full)
PUT http://localhost:8000/api/customers/1/
Authorization: Bearer <access_token>
Content-Type: application/json

{
  "display_name": "Acme Corp (John D.)",
  "remarks": "Updated remarks"
}

####
# Delete customer
DELETE http://localhost:8000/api/customers/1/
Authorization: Bearer <access_token>

### VENDORS CRUD

# List vendors
GET http://localhost:8000/api/vendors/
Authorization: Bearer <access_token>

####
# Create vendor
POST http://localhost:8000/api/vendors/
Authorization: Bearer <access_token>
Content-Type: application/json

{
    "name": "Vendor Inc",
    "email": "vendor@example.com",
    "company_name": "Vendor Incorporated",
    "address": "456 Vendor St",
    "phone": "9876543210"
}

####
# Retrieve vendor
GET http://localhost:8000/api/vendors/1/
Authorization: Bearer <access_token>

####
# Update vendor
PUT http://localhost:8000/api/vendors/1/
Authorization: Bearer <access_token>
Content-Type: application/json

{
    "name": "Vendor Inc Updated",
    "email": "vendor@example.com",
    "company_name": "Vendor Incorporated",
    "address": "789 Vendor Ave",
    "phone": "9876543210"
}

####
# Delete vendor
DELETE http://localhost:8000/api/vendors/1/
Authorization: Bearer <access_token>

### INVOICES CRUD

# List invoices
GET http://localhost:8000/api/invoices/
Authorization: Bearer <access_token>

####
# Create invoice
POST http://localhost:8000/api/invoices/
Authorization: Bearer <access_token>
Content-Type: application/json

{
    "customer_id": 1,
    "invoice_number": "INV-1001",
    "date": "2025-08-24",
    "due_date": "2025-09-24",
    "amount": "500.00",
    "status": "draft",
    "notes": "First invoice"
}

####
# Retrieve invoice
GET http://localhost:8000/api/invoices/1/
Authorization: Bearer <access_token>

####
# Update invoice
PUT http://localhost:8000/api/invoices/1/
Authorization: Bearer <access_token>
Content-Type: application/json

{
    "customer_id": 1,
    "invoice_number": "INV-1001",
    "date": "2025-08-24",
    "due_date": "2025-09-24",
    "amount": "600.00",
    "status": "sent",
    "notes": "Updated invoice"
}

####
# Delete invoice
DELETE http://localhost:8000/api/invoices/1/
Authorization: Bearer <access_token>

### ITEMS CRUD

# List items
GET http://localhost:8000/api/items/
Authorization: Bearer <access_token>

####
# Create item
POST http://localhost:8000/api/items/
Authorization: Bearer <access_token>
Content-Type: application/json

{
    "name": "Item 1",
    "description": "A sample item",
    "price": "10.00",
    "sku": "SKU001"
}

####
# Retrieve item
GET http://localhost:8000/api/items/1/
Authorization: Bearer <access_token>

####
# Update item
PUT http://localhost:8000/api/items/1/
Authorization: Bearer <access_token>
Content-Type: application/json

{
    "name": "Item 1 Updated",
    "description": "Updated description",
    "price": "12.00",
    "sku": "SKU001"
}

####
# Delete item
DELETE http://localhost:8000/api/items/1/
Authorization: Bearer <access_token>

### PAYMENTS CRUD

# List payments
GET http://localhost:8000/api/payments/
Authorization: Bearer <access_token>

####
# Create payment
POST http://localhost:8000/api/payments/
Authorization: Bearer <access_token>
Content-Type: application/json

{
    "invoice_id": 1,
    "amount": "500.00",
    "date": "2025-08-25",
    "method": "Bank Transfer",
    "notes": "Full payment received"
}

####
# Retrieve payment
GET http://localhost:8000/api/payments/1/
Authorization: Bearer <access_token>

####
# Update payment
PUT http://localhost:8000/api/payments/1/
Authorization: Bearer <access_token>
Content-Type: application/json

{
    "invoice_id": 1,
    "amount": "600.00",
    "date": "2025-08-26",
    "method": "Credit Card",
    "notes": "Updated payment"
}

####
# Delete payment
DELETE http://localhost:8000/api/payments/1/
Authorization: Bearer <access_token>

### QUOTES CRUD

# List quotes
GET http://localhost:8000/api/quotes/
Authorization: Bearer <access_token>

####
# Create quote (all fields, no items)
POST http://localhost:8000/api/quotes/
Authorization: Bearer <access_token>
Content-Type: application/json

{
  "customer_id": 1,
  "quote_number": "Q-2025-001",
  "reference_number": "REF-123",
  "quote_date": "2025-08-27",
  "expiry_date": "2025-09-10",
  "salesperson": "Alice Smith",
  "project_name": "Project X",
  "subject": "Quotation for Project X",
  "customer_notes": "Please review and confirm.",
  "terms_and_conditions": "Payment within 30 days.",
  "subtotal": "10000.00",
  "discount": "5.00",
  "tax_type": "TDS",
  "tax_percentage": "5",
  "adjustment": "-100.00",
  "total_amount": "9500.00"
}

####
# Retrieve quote (with nested item details)
GET http://localhost:8000/api/quotes/1/
Authorization: Bearer <access_token>

####
# Update quote (partial or full)
PUT http://localhost:8000/api/quotes/1/
Authorization: Bearer <access_token>
Content-Type: application/json

{
  "subject": "Updated subject",
  "discount": "10.00"
}

####
# Delete quote
DELETE http://localhost:8000/api/quotes/1/
Authorization: Bearer <access_token>

# Add item to quote (QuoteItem)
POST http://localhost:8000/api/quoteitems/
Authorization: Bearer <access_token>
Content-Type: application/json

{
  "quote": 1,
  "item_id": 1,
  "quantity": 2,
  "rate": "5000.00",
  "amount": "10000.00"
}

### PROFORMA INVOICES CRUD

# List proforma invoices
GET http://localhost:8000/api/proforma-invoices/
Authorization: Bearer <access_token>

####
# Create proforma invoice
POST http://localhost:8000/api/proforma-invoices/
Authorization: Bearer <access_token>
Content-Type: application/json

{
    "customer_id": 1,
    "proforma_number": "P-1001",
    "date": "2025-08-24",
    "due_date": "2025-09-24",
    "amount": "1500.00",
    "status": "draft",
    "notes": "First proforma"
}

####
# Retrieve proforma invoice
GET http://localhost:8000/api/proforma-invoices/1/
Authorization: Bearer <access_token>

####
# Update proforma invoice
PUT http://localhost:8000/api/proforma-invoices/1/
Authorization: Bearer <access_token>
Content-Type: application/json

{
    "customer_id": 1,
    "proforma_number": "P-1001",
    "date": "2025-08-24",
    "due_date": "2025-09-24",
    "amount": "1600.00",
    "status": "sent",
    "notes": "Updated proforma"
}

####
# Delete proforma invoice
DELETE http://localhost:8000/api/proforma-invoices/1/
Authorization: Bearer <access_token>

### DELIVERY CHALLANS CRUD

# List delivery challans
GET http://localhost:8000/api/delivery-challans/
Authorization: Bearer <access_token>

####
# Create delivery challan
POST http://localhost:8000/api/delivery-challans/
Authorization: Bearer <access_token>
Content-Type: application/json

{
    "customer_id": 1,
    "challan_number": "DC-1001",
    "date": "2025-08-24",
    "delivery_date": "2025-08-25",
    "status": "draft",
    "notes": "First delivery challan"
}

####
# Retrieve delivery challan
GET http://localhost:8000/api/delivery-challans/1/
Authorization: Bearer <access_token>

####
# Update delivery challan
PUT http://localhost:8000/api/delivery-challans/1/
Authorization: Bearer <access_token>
Content-Type: application/json

{
    "customer_id": 1,
    "challan_number": "DC-1001",
    "date": "2025-08-24",
    "delivery_date": "2025-08-25",
    "status": "delivered",
    "notes": "Delivered"
}

####
# Delete delivery challan
DELETE http://localhost:8000/api/delivery-challans/1/
Authorization: Bearer <access_token>

### INVENTORY ADJUSTMENTS CRUD

# List inventory adjustments
GET http://localhost:8000/api/inventory-adjustments/
Authorization: Bearer <access_token>

####
# Create inventory adjustment
POST http://localhost:8000/api/inventory-adjustments/
Authorization: Bearer <access_token>
Content-Type: application/json

{
    "item_id": 1,
    "adjustment_number": "ADJ-1001",
    "date": "2025-08-24",
    "quantity": 10,
    "reason": "Stock count correction",
    "notes": "Initial adjustment"
}

####
# Retrieve inventory adjustment
GET http://localhost:8000/api/inventory-adjustments/1/
Authorization: Bearer <access_token>

####
# Update inventory adjustment
PUT http://localhost:8000/api/inventory-adjustments/1/
Authorization: Bearer <access_token>
Content-Type: application/json

{
    "item_id": 1,
    "adjustment_number": "ADJ-1001",
    "date": "2025-08-24",
    "quantity": 12,
    "reason": "Correction",
    "notes": "Updated adjustment"
}

####
# Delete inventory adjustment
DELETE http://localhost:8000/api/inventory-adjustments/1/
Authorization: Bearer <access_token>